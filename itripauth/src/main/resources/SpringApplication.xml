<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.2.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop-3.2.xsd">
    <!-- Ioc -->
    <!--有也行没有也会自动注入-->
    <context:annotation-config></context:annotation-config>
<!--     <context:component-scan base-package="cn.itrip"></context:component-scan>-->
     
    <!-- AOP -->
    <!-- 增强类注册 -->
    <!-- <bean class="Aop.LoggingAspect"/>-->
    <aop:aspectj-autoproxy></aop:aspectj-autoproxy> 
    <!-- 获取数据源(JNDI获取服务器(Tomcat)本身的数据源) -->
<!-- 	<bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean"-->
<!--        >-->
<!--       &lt;!&ndash;  通过jndiName指定数据源 &ndash;&gt;-->
<!--         <property name="jndiName" value="java:comp/env/jdbc/appinfodb"/>       -->
<!--     </bean>  -->
    <!-- 引入数据源配置文件 -->
    <bean  class="org.springframework.beans.factory.config.PreferencesPlaceholderConfigurer">
        <property name="location" >
        	<value>classpath:databaseSource.properties</value>
        </property>
    </bean>
    <!-- 获取数据源(配置文件) 注意配置文件键和pom文件标签名重复，例如name,url-->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
        destroy-method="close">
        <property name="driverClassName" value="${driver}" />
<!--        <property name="url">-->
<!--            <value><![CDATA[jdbc:mysql://127.0.0.1:3306/smbms?-->
<!--                    useUnicode=true&characterEncoding=utf-8]]></value>-->
<!--        </property>-->
        <property name="url" value="${url}" />
        <property name="username" value="${username}" />
        <property name="password" value="${password}" />
    </bean>
	<!-- 事务管理自动提交 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>
    <tx:annotation-driven transaction-manager="transactionManager"/>	
    <!-- 配置SqlSessionFactoryBean，实例化工厂，加载数据源，读取mybatis配置文件 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 引用数据源组件 -->
        <property name="dataSource" ref="dataSource" />
        <!-- 引用mybatis配置文件中的配置 -->
        <property name="configLocation" value="classpath:mybatis-config.xml" />
    </bean>
    <!-- 配置DAO 1.将接口定义成组件 2.将工厂注入session,将session注入给Dao（注入映射器）3.将mapper映射给Mybatis-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" /> -->
        <property name="basePackage" value="cn.itrip" />
    </bean>
	<!-- 必须写 -->
   
     
     
     
     
</beans>